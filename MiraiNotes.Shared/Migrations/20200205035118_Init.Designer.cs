// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MiraiNotes.Shared;

namespace MiraiNotes.Shared.Migrations
{
    [DbContext(typeof(MiraiNotesContext))]
    [Migration("20200205035118_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1");

            modelBuilder.Entity("MiraiNotes.Core.Entities.GoogleTask", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("CompletedOn")
                        .HasColumnType("INTEGER");

                    b.Property<long>("CreatedAt")
                        .HasColumnType("INTEGER");

                    b.Property<string>("GoogleTaskID")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LocalStatus")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.Property<string>("ParentTask")
                        .HasColumnType("TEXT");

                    b.Property<string>("Position")
                        .HasColumnType("TEXT");

                    b.Property<long?>("RemindOn")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RemindOnGUID")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TaskListID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long?>("ToBeCompletedOn")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ToBeSynced")
                        .HasColumnType("INTEGER");

                    b.Property<long>("UpdatedAt")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("GoogleTaskID")
                        .IsUnique();

                    b.HasIndex("TaskListID");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("MiraiNotes.Core.Entities.GoogleTaskList", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("CreatedAt")
                        .HasColumnType("INTEGER");

                    b.Property<string>("GoogleTaskListID")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("LocalStatus")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("ToBeSynced")
                        .HasColumnType("INTEGER");

                    b.Property<long>("UpdatedAt")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("GoogleTaskListID")
                        .IsUnique();

                    b.HasIndex("UserID");

                    b.ToTable("TaskLists");
                });

            modelBuilder.Entity("MiraiNotes.Core.Entities.GoogleUser", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("CreatedAt")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("GoogleUserID")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PictureUrl")
                        .HasColumnType("TEXT");

                    b.Property<long>("UpdatedAt")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("GoogleUserID")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MiraiNotes.Core.Entities.GoogleTask", b =>
                {
                    b.HasOne("MiraiNotes.Core.Entities.GoogleTaskList", "TaskList")
                        .WithMany("Tasks")
                        .HasForeignKey("TaskListID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MiraiNotes.Core.Entities.GoogleTaskList", b =>
                {
                    b.HasOne("MiraiNotes.Core.Entities.GoogleUser", "User")
                        .WithMany("TaskLists")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
